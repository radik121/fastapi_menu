version: '3.9'

services:
  test_web_api:
    build: ./back
    container_name: test_web_api
    command: "pytest -v"
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - '8080:8080'
    depends_on:
      test_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    # networks:
    #   - test_networks

  test_db:
    image: postgres:15.1-alpine
    container_name: test_db_postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_TEST}
    ports:
      - '5435:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # networks:
    #   - test_networks

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 5
#     networks:
#       - test_networks

# networks:
#   test_networks:
#     name: test_networks
